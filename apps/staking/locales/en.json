{
  "general": {
    "comingSoon": "Coming Soon",
    "loading": "Loading...",
    "or": "or",
    "and": "and",
    "unknownError": "unknown error",
    "viewOnExplorer": "View on Explorer",
    "viewOnExplorerShort": "View",
    "you": "You",
    "emptySlot": "Empty Contributor Slot",
    "notFound": "Not Found",
    "nodeNotFound": "Node Not Found",
    "soon": "Soon",
    "now": "now",
    "none": "None",
    "error": {
      "UserRejectedRequest": "user rejected the request",
      "InvalidBLSSignature": "invalid BLS signature, try again later",
      "InvalidBLSProofOfPossession": "BLS proof of possession is invalid",
      "SignatureExpired": "signature expired, try again later",
      "InsufficientBalance": "insufficient {tokenSymbol} balance for transaction"
    },
    "reserved": "Reserved",
    "staked": "Staked"
  },
  "maintenance": {
    "title": "Maintenance Notice",
    "description": "Sorry! The staking portal is under maintenance. Please check back later."
  },
  "fee": {
    "networkFee": "Network Fee",
    "networkFeeTooltip": "The estimated amount of {gasTokenSymbol} it will cost to process this transaction on the {mainNetworkChain} network. <link>Learn more</link>",
    "networkFeeTooltipWithFormula": "This is the estimated amount of {gasTokenSymbol} it will cost to process this transaction on {mainNetworkChain}. <link>Learn more</link> <br></br> <formula></formula>",
    "missingFees": "Unable to fetch fee estimates for all transactions. Fee estimate may be inaccurate",
    "gasHigh": "The network fee is higher than usual, the price of Gas is higher than normal on {mainNetworkChain} due to high demand. <link>Learn more</link>"
  },
  "maths": {
    "outOf": "{count}/{max}"
  },
  "clipboard": {
    "copyToClipboard": "Copy to Clipboard",
    "copyToClipboardSuccessToast": "Copied to clipboard!"
  },
  "navigation": {
    "home": "Home",
    "stake": "Stake Now",
    "myStakes": "My Stakes",
    "docs": "Docs",
    "tokenSite": "Session Token",
    "support": "Support",
    "register": "Register",
    "faucet": "Faucet",
    "explorer": "Explorer",
    "leaderboard": "Leaderboard",
    "hamburgerDropdown": {
      "ariaLabel": "Open navigation menu",
      "language": "Change language",
      "ariaLanguage": "Open language selection",
      "support": "Support",
      "ariaSupport": "Go to support page",
      "faucet": "Faucet",
      "ariaFaucet": "Go to faucet page",
      "explorer": "Explorer",
      "ariaExplorer": "Go to node explorer"
    },
    "managedBy": ""
  },
  "wallet": {
    "modalButton": {
      "connect": "Connect Wallet",
      "connected": "Open Wallet",
      "connecting": "Connecting...",
      "reconnecting": "Reconnecting...",
      "ariaConnected": "Open wallet account modal",
      "ariaDisconnected": "Open connect wallet modal",
      "balance": "Balance",
      "address": "Address",
      "fallbackName": "No name"
    },
    "watchTokenButton": {
      "importText": "Import Token",
      "ariaImport": "Import {tokenSymbol} information to your wallet watch list",
      "changeNetwork": "Change Network",
      "ariaChangeNetwork": "Switch to a supported network",
      "pending": "Pending",
      "ariaPending": "Adding {tokenSymbol} to your wallet watch list",
      "failError": "Your wallet does not support importing tokens"
    },
    "networkDropdown": {
      "invalid": "Invalid network",
      "ariaMainnet": "Switch to {mainnetName}",
      "ariaTestnet": "Switch to {testnetName}",
      "ariaDropdown": "Open network dropdown",
      "errorNotSupported": "It looks like your wallet doesn't support the Arbitrum Sepolia test network. Try connecting with a different wallet."
    }
  },
  "notFound": {
    "description": "Sorry! We couldn't find the page you were looking for.",
    "homeButton": "Return Home"
  },
  "home": {
    "title": "Stake <text-semibold>{tokenSymbol}</text-semibold>",
    "titleDescription": "Secure the Network",
    "buttons": {
      "primary": "Participate in Incentivised Testnet",
      "secondary": "Join Bug Bounty"
    },
    "heroImageAlt": "Glass cube with green highlights"
  },
  "faucet": {
    "information": {
      "title": "Getting test {tokenSymbol}",
      "referralTitle": "Referrals",
      "referralDescription": "If you received a valid referral code from a Session Token community member, you are eligible to receive test {tokenSymbol}.",
      "communityTitle": "Session Token Community Members",
      "communityDescription": "If you were part of the Token Community <session-token-community-snapshot-link></session-token-community-snapshot-link>  taken on {snapshotDate}, you are eligible to receive test {tokenSymbol}. Connect to {connectionOptions}, and then connect your wallet or enter your wallet address manually. If your eligibility is confirmed, test {tokenSymbol} will be sent to this address.",
      "oxenTitle": "Oxen Service Nodes",
      "oxenDescription": "If you registered for the <oxen-program-link></oxen-program-link> by {oxenRegistrationDate}, you are also eligible. Connect the wallet that you registered for the program with, or enter the wallet address manually. If your eligibility is confirmed, test {tokenSymbol} will be sent to this address.",
      "walletRequirementTitle": "Wallet Requirements:",
      "walletRequirementDescription": "You will need test {gasTokenSymbol} on the {testNetworkChain} network to use as <gas-info-link>gas</gas-info-link> for all test {tokenSymbol} transactions. You can get test {gasTokenSymbol} from an <gas-faucet-link>{testNetworkChain} faucet</gas-faucet-link>.",
      "notEligible": "Not eligible? {testnetName} and its Incentive Program are currently closed to the public, however we will be inviting new users to join our testnet in the future."
    },
    "addTokenInfo": "Make {tokenSymbol} visible in your wallet by manually importing the token.",
    "transactions": {
      "tableCaption": "A list of your faucet transactions.",
      "when": "When",
      "hash": "Hash",
      "amount": "Amount"
    },
    "form": {
      "back": "Back",
      "inputPlaceholder": "Wallet address",
      "inputAria": "Enter your wallet address to receive test {tokenSymbol} from the faucet.",
      "connectWalletButtonText": "Connect Wallet",
      "connectWalletButtonAria": "Connect your wallet to receive test {tokenSymbol} from the faucet.",
      "disconnectWalletButtonText": "Disconnect",
      "disconnectWalletButtonAria": "Disconnect your wallet.",
      "connectedWalletButtonText": "Connected",
      "connectedWalletButtonAria": "Connected to wallet, click to disconnect.",
      "telegramConnectButtonAria": "Connect your Telegram account",
      "discordConnectButtonAria": "Connect your Discord account",
      "swapToTestnet": "Swap to {testnetName}",
      "confirm": {
        "connectedWalletInfo": "Your connected wallet's account <address></address> is being used to fill out this form. You will not be asked to make any transactions.",
        "discordDisclaimer": "Your connected <tooltip>Discord User ID</tooltip> will be sent with this form.",
        "discordDisclaimerUserIdTooltip": "Your Discord User ID is the unique identifier for your Discord account.",
        "telegramDisclaimer": "Your connected <tooltip>Telegram User ID</tooltip> will be sent with this form.",
        "telegramDisclaimerUserIdTooltip": "Your Telegram User ID is the unique identifier for your Telegram account."
      },
      "submit": {
        "continueText": "Continue",
        "continueAria": "Continue to receive test {tokenSymbol} from the faucet.",
        "getTestTokensText": "Get Test {tokenSymbol}",
        "getTestTokensAria": "Get test {tokenSymbol} from the faucet.",
        "checkingEligibilityText": "Checking Eligibility...",
        "checkingEligibilityAria": "Checking if you are eligible to receive test {tokenSymbol} from the faucet.",
        "sendingTokensText": "Sending Test {tokenSymbol}...",
        "sendingTokensAria": "Sending test {tokenSymbol} to your wallet address.",
        "transactionSuccess": "Transaction Successful",
        "transactionSuccessDescription": "Test {tokenSymbol} has been sent to your wallet address.",
        "transactionError": "Transaction Failed"
      },
      "error": {
        "invalidAddress": "Wallet address is not valid. It must be a valid {ethTokenSymbol} address: {example}",
        "insufficientEth": "It looks like you don't have enough test {gasTokenSymbol} on {testNetworkChain}, go to <recommended-gas-faucet-link></recommended-gas-faucet-link> to get some. You have {gasAmount} test {gasTokenSymbol}",
        "insufficientEthTextOnly": "It looks like you don't have enough test {gasTokenSymbol} on {testNetworkChain}. You have {gasAmount} test {gasTokenSymbol}",
        "incorrectChain": "Faucet only works on {testnetName}, switch to {testNetworkChain} network to use the faucet.",
        "faucetOutOfTokens": "Faucet is out of {tokenSymbol}, Please <contact-support-link></contact-support-link> for assistance.",
        "faucetOutOfTokensTextOnly": "Faucet is out of {tokenSymbol}, Please contact support for assistance.",
        "invalidService": "The {service} account you connected was not part of the community snapshot on {snapshotDate} and is not eligible for testnet access.",
        "invalidOxenAddress": "This wallet address was not registered for the {oxenProgram} on {oxenRegistrationDate} and is not eligible for testnet access.",
        "alreadyUsedService": "The connected {service} account has already been used to claim testnet {tokenSymbol} for another wallet address.",
        "alreadyUsed": "The connected wallet address has already been used to claim testnet {tokenSymbol}.",
        "authFailed": "{service} authentication failed. Please refresh the page and try again.",
        "invalidReferralCode": "Referral code is invalid.",
        "referralCodeCantBeUsedByCreator": "Referral code can't be used by this wallet, consider sharing it with someone.",
        "referralCodeOutOfUses": "Referral code is out of uses.",
        "referralCodeAlreadyUsed": "You have already used this referral code."
      },
      "transactionHash": "Transaction Hash: {hash}",
      "transactionHashDescription": "Transaction hash of the faucet transaction.",
      "haveSomeMore": "Alright then, you can have some more",
      "watchSENTInfo": "You may need to manually add {tokenSymbol} to your wallet’s token list to make it show up, click the button below to add it.",
      "copyTransactionHash": "Copy Transaction Hash",
      "copyTransactionHashSuccessToast": "Copied Transaction Hash to clipboard!",
      "referralCodeAdded": "Faucet referral code detected and added."
    }
  },
  "chainBanner": {
    "unsupportedChain": "You are currently on an unsupported chain. <link>Click here to switch chain</link>",
    "mainnetNotLive": "{mainnetName} is not live yet. <link>Click here to switch to {testnetName}</link>",
    "testnet": "You are currently on {testnetName}."
  },
  "banner": {
    "registrationPaused": "Stagenet node registration is temporarily paused. Apologies for any inconvenience, we expect to be able to re-enable registrations soon. For updates, visit the <link>Session Token discord</link>.",
    "claimRewardsDisabled": "Stagenet rewards claim is temporarily paused. Apologies for any inconvenience, we expect to be able to re-enable rewards claiming soon. For updates, visit the <link>Session Token discord</link>.",
    "newTokenContract": "The Session Token contract has been updated. <remove-token-link>Remove the old token</remove-token-link> and <watch-token>add the new token contract</watch-token> to your wallet watch list to continue using the Staking Portal. If you have any questions, visit the <link>Session Token Discord</link>."
  },
  "modules": {
    "title": {
      "format": "{title}:"
    },
    "shared": {
      "error": "Error"
    },
    "nodes": {
      "title": "Session Nodes"
    },
    "openNodes": {
      "title": "Available Nodes",
      "description": "Nodes that are available for staking. <link>Learn more</link>",
      "noNodesP1": "There are currently no Session Nodes available to stake to.",
      "noNodesP2": "Check out the <link>docs</link> to learn about setting up and registering your own Session Node.",
      "landingP1": "Stake your {tokenSymbol} to multicontributor nodes and help secure the network. ",
      "landingP2": "You can also set up your own multicontributor node for others to stake to.",
      "landingP1Mainnet": "Click on an available Session Node to stake {tokenSymbol} and earn rewards for securing the network.",
      "landingP2Mainnet": "Want to run your own Session Node?",
      "learnMoreButtonText": "Learn More",
      "learnMoreButtonAria": "Navigate to the Session Node documentation page.",
      "showHiddenPendingNodesText": "Show Pending Nodes",
      "error": "An error occurred while fetching available nodes. Please try again. If the problem persists, please <contact-support-link></contact-support-link>",
      "errorButton": "Retry"
    },
    "nodeRegistrations": {
      "title": "Your Prepared Registrations",
      "showHiddenText": "Show Hidden",
      "landingP1": "Select a node to complete registration and start staking.",
      "noWalletP1": "Connect your wallet to view Session Nodes that you have prepared registrations for.",
      "noNodesP1": "You have not prepared registrations for any Session Nodes.",
      "noNodesP2": "Learn how to prepare registration for your Session Node <link>here</link>.",
      "learnMoreButtonText": "Learn More",
      "learnMoreButtonAria": "Navigate to the Session Node documentation page.",
      "error": "An error occurred while fetching your prepared registrations. Please try again. If the problem persists, please <contact-support-link></contact-support-link>",
      "errorButton": "Retry"
    },
    "stakedNodes": {
      "title": "My Stakes",
      "showHiddenText": "Show Hidden",
      "noWalletP1": "You currently have no wallet connected.",
      "noWalletP2": "Click the Connect button to view your staked Session node.",
      "noNodesP1": "You have no staked Session Nodes.",
      "noNodesP2": "Click the <link>Stake Now</link> button to stake to an available node or register a new Session node.",
      "stakeNowButtonText": "Stake Now",
      "stakeNowButtonAria": "Navigate to the staking page to stake to an available node.",
      "error": "An error occurred while fetching your stakes. Please try again. If the problem persists, please <contact-support-link></contact-support-link>",
      "errorButton": "Retry"
    },
    "toast": {
      "error": "Failed to fetch {module}.",
      "refetching": "Trying again...",
      "retryButton": "Retry",
      "refetchSuccess": "Successfully refetched {module}"
    },
    "balance": {
      "title": "Total Staked",
      "description": "Total {tokenSymbol} you have staked to nodes."
    },
    "dailyRewards": {
      "title": "Estimated Daily Reward",
      "titleShort": "Est. Daily Reward",
      "description": "Estimated reward for one node based on latest information. Actual protocol rewards vary. <link>Learn more</link>"
    },
    "totalRewards": {
      "title": "Total Rewards Earned",
      "titleShort": "Total Rewards",
      "description": "The total amount of lifetime rewards earned from staking. <link>Learn more</link>"
    },
    "unclaimedTokens": {
      "title": "Unclaimed Tokens",
      "description": "The total amount of rewards that have not been claimed yet. <link>Learn more</link>"
    },
    "unclaimedStakes": {
      "title": "Unclaimed Stakes",
      "description": "The total amount of stakes that have not been claimed yet. <link>Learn more</link>"
    },
    "unclaimedRewards": {
      "title": "Unclaimed Rewards",
      "description": "The total amount of rewards that have not been claimed yet. <link>Learn more</link>"
    },
    "totalNodes": {
      "title": "Total Nodes",
      "description": "The total number of nodes you are currently staked to. <link>Learn more</link>"
    },
    "claim": {
      "title": "Claim",
      "dialog": {
        "title": "Claim Rewards",
        "updateBalanceCost": "Update Balance Cost:",
        "claimRewardsCost": "Claim Rewards Cost:",
        "amountClaimable": "Amount Claimable",
        "amountClaimableTooltip": "Amount of {tokenSymbol} rewards able to be claimed.",
        "buttons": {
          "submit": "Claim {tokenSymbol}",
          "submitAria": "Claim {tokenSymbol} with a claim gas fee of {gasAmount} {gasTokenSymbol}"
        },
        "alert": {
          "gasFetchFailedUpdateBalance": "Failed to fetch fee estimate for updating rewards balance. Fee estimate may be inaccurate.",
          "gasFetchFailedClaimRewards": "Failed to fetch fee estimate for claiming rewards. Fee estimate may be inaccurate.",
          "highGas": "The price of Gas is higher than usual."
        },
        "successToast": "Claimed {tokenAmount} on Arbitrum"
      },
      "error": "An error occurred while fetching the signature for your unclaimed rewards. Please try again. If the problem persists, please <contact-support-link></contact-support-link>",
      "errorButton": "Retry",
      "stage": {
        "balance": {
          "idle": "Updating rewards amount on Arbitrum",
          "pending": "Updating rewards amount on Arbitrum",
          "success": "Updated rewards amount on Arbitrum",
          "errorTemplate": "Failed to update rewards amount on Arbitrum, {reason}",
          "errors": {
            "NullAddress": "recipient address is invalid",
            "RecipientRewardsTooLow": "rewards balance already updated",
            "InvalidBLSSignature": "invalid BLS signature, try again later",
            "InsufficientBLSSignatures": "insufficient BLS signatures, try again later"
          }
        },
        "claim": {
          "idle": "Claiming {tokenAmount} on Arbitrum",
          "pending": "Claiming {tokenAmount} on Arbitrum",
          "success": "Claimed {tokenAmount} on Arbitrum",
          "errorTemplate": "Failed to claim rewards on Arbitrum, {reason}",
          "errors": {}
        }
      }
    },
    "price": {
      "title": "Price",
      "description": "Current price of {tokenSymbol}."
    },
    "points": {
      "title": "Testnet Points",
      "description": "These points determine your eventual share of Session Tokens as part of the Testnet Incentive Program. <link>Learn more</link>."
    },
    "comingSoon": {
      "title": "Coming Soon",
      "description": "Coming Soon"
    },
    "referral": {
      "title": "Referral Program",
      "description1": "Grow the {sessionNetwork} by inviting others to join the testnet. Share your unique referral link to invite newcomers to claim test SESH tokens and stake to multicontributor nodes.",
      "description2": "Learn more <link>here</link>.",
      "description3": "By participating in the Testnet Referral Program, you agree to these <link>terms and conditions</link>.",
      "description4": "This code has been used <text-medium>{uses}</text-medium> times and has <text-medium>{remainingUses}</text-medium> remaining uses. Each use gives <text-medium>{drip}</text-medium>",
      "showButton": "Show referral link"
    }
  },
  "sessionNodes": {
    "general": {
      "publicKeyShort": "SN Key",
      "publicKeyLong": "Session Node Public Key",
      "publicKeyDescription": "This node's unique public identifier on the {sessionNetwork}",
      "blsKey": "BLS Key",
      "blsKeyDescription": "This node’s public cryptographic key for interacting with Session smart contracts",
      "operatorAddress": "Operator Address",
      "operatorAddressTooltip": "The wallet address of the node operator.",
      "beneficiaryAddress": "Beneficiary Address",
      "beneficiaryAddressTooltip": "The wallet address rewards are sent to.",
      "operatorFee": "Operator Fee",
      "operatorFeeShort": "Fee",
      "operatorFeeDescription": "Operators of multicontributor nodes can set an operator fee to help cover operating costs. The operator fee is a percentage of the total node rewards. After this fee is deducted, the remaining rewards are distributed to all contributors, including the operator, based on their respective stake amounts.",
      "rawData": "Raw Data"
    },
    "staking": {
      "stakedBalance": "Staked Balance",
      "stakedBalanceDescription": "Your total staked {tokenSymbol} in the node.",
      "minimumContribution": "Minimum Contribution",
      "minimumContributionDescription": "Minimum amount of {tokenSymbol} that can be staked to this node.",
      "maximumContribution": "Maximum Contribution",
      "maximumContributionDescription": "Maximum amount of {tokenSymbol} that can be staked to this node.",
      "stakedAmount": "Staked Amount",
      "stakedAmountDescription": "Amount of {tokenSymbol} staked to this node.",
      "stakeAmount": "Stake Amount",
      "stakeAmountDescription": "Amount of {tokenSymbol} to stake."
    }
  },
  "actionModules": {
    "shared": {
      "notEnoughTokensAlert": "It looks like you don't have enough {tokenSymbol} to stake to this node. It looks like your wallet has {walletAmount}, please make sure you have at least {tokenAmount} in your wallet before staking.",
      "stakeAmount": "Stake Amount",
      "stakeAmountDescription": "Amount of {tokenSymbol} you are staking to this node",
      "totalStaked": "Total Staked",
      "totalStakedDescription": "The amount of {tokenSymbol} staked to this node, including your stake",
      "yourStake": "Your Stake",
      "yourStakeDescription": "The amount of {tokenSymbol} you have staked to this node",
      "operatorAddress": "Operator Address",
      "operatorAddressTooltip": "The address of the node operator.",
      "operatorAddressDescription": "The wallet address of the node operator",
      "autoActivate": "Automatic Activation",
      "autoActivateDescription": "If enabled, this node will automatically join the network once fully staked",
      "rewardsAddress": "Rewards Address",
      "rewardsAddressDescription": "The wallet address that you will claim rewards to",
      "operatorFee": "Operator Fee",
      "operatorFeeDescription": "Percentage of node rewards taken as a fee by the operator, with remaining rewards distributed to contributors, proportional to stake amount",
      "reserveSlots": "Reserved Stakes",
      "reserveSlotsDescription": "You can reserve stakes for specific contributors to your node.",
      "buttonEditField": {
        "aria": "Edit {field}"
      },
      "enabled": "Enabled",
      "disabled": "Disabled",
      "progress": "Progress",
      "retry": "Retry",
      "proxyApprovalCost": "Proxy Approval Cost:",
      "proxyApprovalNotNeededTooltip": "Already approved for {amount}, proxy approval not needed for stake amount."
    },
    "stakeAmount": {
      "validation": {
        "underMinOperator": "Node operators must stake at least {min} (25%)",
        "underMin": "You must stake at least {min}",
        "overMax": "You cannot stake more than {max}",
        "incorrectFormat": "Unable to parse stake amount, please re-enter the value",
        "reduceForbidden": "You cannot reduce your stake amount, you can only increase it or remove all of it."
      }
    },
    "operatorFee": {
      "validation": {
        "underMin": "Operator fee must be at least {min}",
        "overMax": "Operator fee cannot be more than {max}",
        "incorrectFormat": "Unable to parse operator fee, please re-enter the value"
      }
    },
    "ethAddress": {
      "validation": {
        "invalidAddress": "Invalid Ethereum Address"
      }
    },
    "rewardsAddress": {
      "validation": {
        "invalidAddress": "Invalid rewards address, please re-enter the value"
      }
    },
    "staking": {
      "titleNewStake": "Stake to a Node",
      "titleManageStake": "Manage Stake",
      "rewardsAddress": "Add Separate Rewards Address (Optional)",
      "rewardsAddressDescription": "Rewards will be claimable to the wallet you are registering with, or you can specify a different wallet address",
      "manage": {
        "stakeAmountAdditional": "Additional Stake Amount",
        "stakeAmountAdditionalDescription": "Additional stake amount to add to the existing stake.",
        "buttonRemoveStake": {
          "text": "Remove Stake",
          "aria": "Remove stake from the node"
        },
        "withdrawContribution": {
          "idle": "Withdrawing {tokenSymbol} from Multicontributor Contract",
          "pending": "Withdrawing {tokenSymbol} from Multicontributor Contract",
          "success": "Withdrawing {tokenSymbol} from Multicontributor Contract",
          "errorTemplate": "Failed to withdraw {tokenSymbol} from Multicontributor Contract, {reason}",
          "errors": {}
        }
      },
      "buttonStake": {
        "text": "Stake",
        "aria": "Stake to the node"
      },
      "error": {
        "specialTitle": "Something went wrong",
        "specialDescription": "Something went wrong when trying to stake to the node, <please-contract-support-link></please-contract-support-link>"
      },
      "disabledReason": {
        "alreadyFinalized": "The node details are already finalized and can't be edited.",
        "alreadyContributedOperatorFee": "The operator fee can't be edited once another address has contributed to the node.",
        "alreadyContributedReservedSlots": "The reserved stakes can't be edited once another address has contributed to the node.",
        "pastTimeLimitStakeAmountRemove": "You can't remove your stake from a node after {timeLimitAmount} from your previous stake to that node."
      }
    },
    "registration": {
      "shared": {
        "buttonContinue": {
          "text": "Continue",
          "aria": "Continue to the next stage of the registration process"
        },
        "buttonConfirm": {
          "text": "Confirm",
          "aria": "Confirm the input and continue to the next stage of the registration process"
        },
        "buttonBack": {
          "text": "Back",
          "aria": "Go back to the previous stage of the registration process"
        },
        "buttonConfirmAndStake": {
          "text": "Confirm and Stake",
          "aria": "Confirm the registration data and stake to the node"
        },
        "buttonEditField": {
          "aria": "Click to edit the field"
        },
        "buttonViewMyStakes": {
          "text": "View My Stakes",
          "aria": "View your stakes"
        },
        "registerANewNode": "Register a New Node",
        "singleContributorNode": "Single Contributor Node",
        "multiContributorNode": "Multicontributor Node",
        "submit": {
          "preparedAt": "Registration Prepared",
          "preparedAtDescription": "Time since this node's registration was prepared"
        },
        "error": {
          "errorMessage": "Error Message",
          "copyToClipboardButtonAria": "Copy error message to clipboard"
        }
      },
      "loading": {
        "title": "Checking for existing registrations",
        "error": "Something went wrong",
        "foundRunning": "Another node with this key is already registered. Your registration cannot be finalized until the other node exits the network.",
        "foundOpen": "A multicontributor node was found with the same key, you need to delete the node before creating a new one."
      },
      "start": {
        "title": "Do you want to stake by yourself or with others?",
        "description": "To stake by yourself, you need to stake {minStakeSolo}.",
        "description2": "To operate a node and stake with others, you need to stake at least {minStakeMulti}.",
        "buttonSolo": {
          "text": "Stake by myself",
          "aria": "Continue the registration process by staking the full {minStakeSolo} yourself."
        },
        "buttonMulti": {
          "text": "Stake with others",
          "aria": "Continue the registration process by staking at least {minStakeMulti} yourself."
        },
        "chooseMode": {
          "title": "Choose your setup mode:",
          "express": {
            "text": "Express",
            "tooltip": "Skip detailed setup and use default settings (you can edit specific settings later)"
          },
          "guided": {
            "text": "Guided (recommended for new users)",
            "tooltip": "Configure your node settings step-by-step"
          }
        }
      },
      "stakeAmount": {
        "title": "How much do you want to stake?",
        "description": "As the node operator, you must stake at least {minStakeMulti}.",
        "min": "Min: {min}",
        "max": "Max: {max}",
        "errorUnderMin": "You cannot stake under the minimum of {min}"
      },
      "operatorFee": {
        "title": "Set your operator fee",
        "description": "After this fee is deducted, remaining rewards are distributed to you and your contributors, proportional to stake amount."
      },
      "rewardsAddress": {
        "title": "Where do you want your rewards to go?",
        "description": "Your rewards address can be the wallet you are registering with, or a different address",
        "buttonSame": {
          "text": "Same as the wallet",
          "aria": "Use the same wallet address as the one you are registering with"
        },
        "buttonDifferent": {
          "text": "Different address",
          "aria": "Use a different wallet address"
        }
      },
      "rewardsAddressInputSolo": {
        "title": "Which address do you want your rewards to go to?",
        "description": "Claimed rewards will be sent to this address.",
        "errorInvalidAddress": "Invalid Ethereum Address"
      },
      "rewardsAddressInputMulti": {
        "title": "Which address do you want your rewards to go to?",
        "description": "Claimed rewards will be sent to this address, as well as {tokenSymbol} earned from your operator fee",
        "errorInvalidAddress": "Invalid Ethereum Address"
      },
      "reserveSlots": {
        "title": "Do you want to reserve stakes for specific contributors?",
        "description": "You can reserve up to {remainingStake} for specific contributors to your node.",
        "buttonSkip": {
          "text": "Skip",
          "aria": "Skip reserving stakes for specific contributors"
        },
        "buttonReserve": {
          "text": "Reserve",
          "aria": "Reserve stakes for specific contributors"
        }
      },
      "reserveSlotsInput": {
        "title": "Which addresses do you want to reserve stakes for?",
        "description": "Reserve stakes for 1-9 other contributors.",
        "address": "Address",
        "addressDescription": "The wallet address of the contributor you want to reserve a stake for",
        "stakeAmount": "Stake Amount",
        "stakeAmountDescription": "The amount you want to reserve for this contributor",
        "percentage": "Percentage",
        "remainingStake": "Remaining Stake",
        "remainingStakeNone": "This node is fully reserved",
        "remainingStakeCreationDescription": "{amount} will be available for anyone to stake. Contributors with reserved stakes will also be able to stake more than their reserved amount.",
        "remainingStakeViewDescription": "{amount} is available for anyone to stake. Contributors with reserved stakes will also be able to stake more than their reserved amount.",
        "validation": {
          "slotInvalid": "Invalid reserved stake, please try again",
          "addressAlreadyUsed": "You have already reserved a stake for this address",
          "invalidReservedSlots": "Invalid reserved stakes",
          "errorUnderMin": "You must reserve more than {min}",
          "underMin": "You must reserve more than {min}",
          "overMax": "You must reserve less than {max}"
        },
        "buttonAdd": {
          "text": "Add",
          "aria": "Add a new address to reserve stakes for"
        },
        "buttonRemove": {
          "text": "Remove",
          "aria": "Remove an address from reserving stakes for"
        },
        "buttonCancel": {
          "text": "Cancel",
          "aria": "Cancel adding a new address to reserve stakes for"
        },
        "buttonDeleteCancel": {
          "text": "Delete",
          "aria": "Delete the address reserved stake information"
        },
        "buttonConfirm": {
          "text": "Add Reserved Stake",
          "aria": "Confirm adding a new address to reserve stakes for"
        },
        "buttonConfirmEdit": {
          "text": "Confirm Reserved Stake",
          "aria": "Confirm editing the address and amount of stake to reserve for"
        }
      },
      "autoActivate": {
        "title": "Do you want your node to activate automatically?",
        "description": "Automatically activate your node once fully staked, or manually activate when you are ready.",
        "buttonAutomatic": {
          "text": "Automatic",
          "aria": "Automatically activate your node once fully staked"
        },
        "buttonManual": {
          "text": "Manual",
          "aria": "Manually activate your node when you are ready"
        }
      },
      "submitSolo": {
        "addBlsPubKeyCost": "Add BLS Public Key Cost:",
        "approve": {
          "idle": "Requesting permission to stake {tokenSymbol}",
          "pending": "Requesting permission to stake {fullStateAmount} waiting for user approval",
          "success": "Permission to stake {tokenSymbol} granted",
          "errorTemplate": "Wallet permission to stake {tokenSymbol} failed, {reason}, please try again",
          "errors": {}
        },
        "arbitrum": {
          "idle": "Registering node on Arbitrum & Staking {tokenSymbol}",
          "pending": "Registering node on Arbitrum & Staking {tokenSymbol}",
          "success": "Registered node on Arbitrum & Staked {tokenSymbol}",
          "errorTemplate": "Arbitrum registration failed, {reason}",
          "errors": {
            "MaxContributorsExceeded": "max contributors exceeded",
            "ContributionTotalMismatch": "stake does not match required amount",
            "BLSPubkeyAlreadyExists": "node already registered with the same SN Key",
            "InvalidBLSProofOfPossession": "BLS proof of possession is invalid",
            "MaxPubkeyAggregationsExceeded": "block registration limit exceeded, please try again later",
            "SafeERC20FailedOperation": "failed to stake {tokenSymbol}, please try again later"
          }
        },
        "network": {
          "idle": "Registering node on {sessionNetwork}",
          "pending": "Registering node on {sessionNetwork} ({progress} confirmations) estimated time remaining: {remainingTime}",
          "success": "Registering node on {sessionNetwork} confirmed",
          "errors": {
            "template": "Registering node on {sessionNetwork} failed, {reason}, please try again later"
          }
        }
      },
      "errorSolo": {
        "specialTitle": "Something went wrong",
        "specialDescription": "Something went wrong when trying to register the solo node, <please-contract-support-link></please-contract-support-link>"
      },
      "successSolo": {
        "specialTitle": "Single Contributor Node Created!",
        "specialDescription": "Your node is staked and running on the {sessionNetwork}."
      },
      "submitMulti": {
        "deployCost": "Deploy Cost:",
        "proxyApprovalCost": "Proxy Approval Cost:",
        "contributeFundsCost": "Contribute Funds Cost:",
        "create": {
          "idle": "Creating Multicontributor Contract",
          "pending": "Creating Multicontributor Contract",
          "success": "Created Multicontributor Contract",
          "errorTemplate": "Failed to create Multicontributor Contract, {reason}",
          "errors": {}
        },
        "address": {
          "idle": "Finalising Multicontributor Contract address",
          "pending": "Finalising Multicontributor Contract address",
          "success": " Finalised Multicontributor Contract address. <link>View on Arbiscan</link>",
          "errorTemplate": "Failed to finalise Multicontributor Contract address, {reason}",
          "errors": {}
        },
        "approve": {
          "idle": "Requesting permission to stake {tokenSymbol}",
          "pending": "Requesting permission to stake {tokenSymbol} waiting for user approval",
          "success": "Permission to stake {tokenSymbol} granted",
          "errorTemplate": "Wallet permission to stake {tokenSymbol} failed, {reason}, please try again",
          "errors": {}
        },
        "contribute": {
          "idle": "Contributing {tokenSymbol} to Multicontributor Contract",
          "pending": "Contributing {tokenSymbol} to Multicontributor Contract",
          "success": "Contributed {tokenSymbol} to Multicontributor Contract",
          "errorTemplate": "Failed to contribute {tokenSymbol} to Multicontributor Contract, {reason}",
          "errors": {}
        }
      },
      "errorMulti": {
        "specialTitle": "Something went wrong",
        "specialDescription": "Something went wrong when trying to create the multicontributor node, <please-contract-support-link></please-contract-support-link>"
      },
      "successMulti": {
        "specialTitle": "Multicontributor node created!",
        "specialDescription": "Your multicontributor node is ready for others to stake to."
      },
      "alreadyRegisteredMulti": {
        "specialTitle": "Already Registered!",
        "specialDescription": "A multicontributor node was found with the same key, you can continue using this registration or if you want to create a new registration you will need to reset your node's keys."
      },
      "alreadyRegisteredRunning": {
        "specialTitle": "Already Registered!",
        "specialDescription": "Another node with this key is already registered. Your registration cannot be finalized until the other node exits the network."
      }
    },
    "node": {
      "title": "Stake to a Node",
      "contributors": "Contributors",
      "contributorsTooltip": "The number of contributors to this node ",
      "feeEstimate": "Fee Estimate",
      "feeEstimateTooltip": "An estimate of the amount of {gasTokenSymbol} this transaction will use. <link>Learn more</link> <br></br> {formula}",
      "button": {
        "submit": "Stake {amount}",
        "submitting": "Staking {amount}...",
        "waitingForWallet": "Waiting for wallet authorization...",
        "submittingToArbitrum": "Submitting request to Arbitrum...",
        "success": "Successfully staked {amount} {tokenSymbol}."
      }
    }
  },
  "nodeCard": {
    "open": {
      "min": "Min",
      "max": "Max",
      "minContribution": "Min Contribution",
      "viewButton": {
        "text": "View",
        "ariaLabel": "View the node details in the side panel"
      },
      "youOperatorNotStaked": "You are the operator of this multicontributor node, but haven't staked yet. It won’t be listed as an available node until you stake",
      "youReservedNotContributed": "{tokenAmount} has been reserved for you to stake to this node",
      "stakedTo": "Staked",
      "stakedToTooltip": "You have staked {tokenAmount}",
      "errorStakedButAlreadyRunning": "This registration can't finalize because it's for an already running node. You may want to remove your stake."
    },
    "pending": {
      "registerButton": {
        "text": "View",
        "ariaLabel": "View the node registration details in the side panel"
      }
    },
    "staked": {
      "operator": "Operator",
      "operatorTooltip": "You are the operator of this node",
      "operatorTooltipOther": "This is the operator of this node",
      "labelExpand": "Expand",
      "ariaExpand": "Expand node details",
      "labelCollapse": "Collapse",
      "ariaCollapse": "Collapse node details",
      "lastUptime": "Last Uptime: {relativeTime}",
      "lastUptimeDescription": "The last time the node provided a proof of availability. Block {blockNumber} ({date})",
      "lastReward": "Last Reward: {relativeTime}",
      "lastRewardDescription": "The last time the node received rewards. Block {blockNumber} ({date})",
      "exitUnlockTimerProcessing": "Exit request is being processed",
      "exitUnlockTimerNotification": "Exit available {relativeTime}",
      "exitUnlockTimerDescription": "Time left until the node is available for exit. Return {relativeTime} ({date}) to exit the node.",
      "exitTimerNotification": "Exit available. Exit {relativeTime} to avoid penalty.",
      "exitTimerNotificationNow": "Exit now to avoid penalty.",
      "exitTimerDescription": "Node is ready for exit. If you don't exit within {relativeTime}, you may be subject to a small penalty. <link>Learn more</link>",
      "exitTimerDescriptionNow": "Node is ready for exit. If you don't exit now, you may be subject to a small penalty. <link>Learn more</link>",
      "deregistrationTimerNotification": "Deregistration {relativeTime}",
      "deregistrationTimerDescription": "Time left until the node is deregistered and funds are locked for {lockedStakeTime}. Node will be deregistered {relativeTime} ({date})",
      "deregisteredProcessing": "Deregistration is being processed",
      "deregisteredTimerNotification": "Stake will unlock {relativeTime}",
      "deregisteredTimerDescription": "Time left until the stake is unlocked and the node is available for liquidation. ({date})",
      "liquidationNotification": "Awaiting liquidation",
      "liquidationDescription": "The node is inactive and waiting to be removed by the network.",
      "finalize": {
        "buttonText": "Activate",
        "buttonAria": "Activate the node on the network",
        "successToast": "Node activation success, node will be registered in a few minutes"
      },
      "exit": {
        "buttonText": "Exit",
        "buttonAria": "Exit the node from the network",
        "disabledButtonTooltipContent": "Return {relativeTime} ({date}) to exit the node.",
        "disabledInfo": "Stagenet node exits are temporarily paused. Apologies for any inconvenience, we expect to be re-enable exits soon. For updates, visit the <link>Session Token discord</link>.",
        "dialog": {
          "title": "Exit Node",
          "requestFee": "Exit Fee",
          "requestFeeTooltip": "The amount of {gasTokenSymbol} this transaction will use. <link>Learn more</link>",
          "amountStaked": "Amount Staked",
          "amountStakedTooltip": "Amount of {tokenSymbol} staked by you in this node.",
          "buttons": {
            "submit": "Exit Node",
            "submitAria": "Exit the node from the network"
          },
          "alert": {
            "gasFetchFailed": "Failed to fetch fee estimate exiting the node. Fee estimate may be inaccurate.",
            "highGas": "The price of Gas is higher than usual."
          }
        },
        "error": "An error occurred while fetching the signature to exit the node. Please try again. If the problem persists, please <contact-support-link></contact-support-link>",
        "errorButton": "Retry",
        "stage": {
          "arbitrum": {
            "idle": "Session node exit on Arbitrum submitting",
            "pending": "Session node exit on Arbitrum submitting",
            "success": "Session node exit on Arbitrum submitted",
            "errorTemplate": "Failed to submit node exit on Arbitrum, {reason}",
            "errors": {
              "BLSPubkeyDoesNotMatch": "BLS public key does not match"
            }
          },
          "network": {
            "idle": "Session node network exit confirming",
            "pending": "Session node network exit confirming",
            "success": "Session node network exit confirmed",
            "errorTemplate": "Failed to confirm the node exit with the {sessionNetwork}, {reason}",
            "errors": {
              "UnableToReachNetwork": "unable to reach the {sessionNetwork}"
            }
          }
        }
      },
      "requestExit": {
        "buttonText": "Request Exit",
        "buttonAria": "Request for the node to be exited",
        "disabledInfo": "Stagenet node exit requests are temporarily paused. Apologies for any inconvenience, we expect to be re-enable exit requests soon. For updates, visit the <link>Session Token discord</link>.",
        "dialog": {
          "title": "Request Exit",
          "submitAria": "Request exit for the node {pubKey}",
          "description1": "Are you sure?",
          "description2": "Your node will be ready to exit the network {request_time}.",
          "description3": "You'll need to confirm the exit after {request_time}. If you don't confirm within {exit_time}, you may be subject to a small penalty. <link>Learn more</link>",
          "description4": "Once the node has exited the network, you can claim your stake on the staking portal.",
          "buttons": {
            "submit": "Request Exit",
            "submitAria": "Request exit for {pubKey}",
            "cancel": "Cancel",
            "cancelAria": "Cancel exit request"
          },
          "write": {
            "requestFee": "Exit request Fee",
            "requestFeeTooltip": "The amount of {gasTokenSymbol} this transaction will use. <link>Learn more</link>",
            "amountStaked": "Amount Staked",
            "amountStakedTooltip": "Amount of {tokenSymbol} staked by you in this node.",
            "buttons": {
              "submit": "Request Exit",
              "submitAria": "Request node exit"
            },
            "alert": {
              "gasFetchFailed": "Failed to fetch fee estimate for requesting node exit. Fee estimate may be inaccurate.",
              "highGas": "The price of Gas is higher than usual."
            }
          },
          "stage": {
            "arbitrum": {
              "idle": "Session node exit request on Arbitrum submitting",
              "pending": "Session node exit request on Arbitrum submitting",
              "success": "Session node exit request on Arbitrum submitted",
              "errorTemplate": "Failed to submit node exit request on Arbitrum, {reason}",
              "errors": {
                "CallerNotContributor": "caller not a node contributor",
                "EarlierLeaveRequestMade": "leave request already made for this node",
                "SmallContributorLeaveTooEarly": "small contributors can only initiate exit requests after the node has been running for {smallContributorLeaveRequestDelay} days"
              }
            },
            "network": {
              "idle": "Session node exit request confirming",
              "pending": "Session node exit request confirming",
              "success": "Session node exit request confirmed",
              "errorTemplate": "Failed to confirm the submission of the node exit request to the {sessionNetwork}, {reason}",
              "errors": {
                "UnableToReachNetwork": "unable to reach the {sessionNetwork}"
              }
            }
          }
        }
      }
    }
  },
  "statusBar": {
    "network": {
      "loading": "Block loading...",
      "unreachable": "Unreachable",
      "infoTooltip": "Block {blockNumber} was {blockRelativeTime}",
      "warningTooltip": "Block {blockNumber} was {blockRelativeTime}. <clickable-text>Click to refresh</clickable-text>",
      "errorTooltip": "Block {blockNumber} was {blockRelativeTime}. <clickable-text>Click to refresh</clickable-text>",
      "unreachableTooltip": "Unable to reach the network. <clickable-text>Click to refresh</clickable-text>"
    },
    "l2": {
      "loading": "L2 Height loading...",
      "infoTooltip": "L2 Height {height} was {heightRelativeTime}",
      "warningTooltip": "L2 Height {height} was {heightRelativeTime}. <clickable-text>Click to refresh</clickable-text>",
      "errorTooltip": "L2 Height {height} was {heightRelativeTime}. <clickable-text>Click to refresh</clickable-text>",
      "unreachableTooltip": "Unable to reach Arbitrum. <clickable-text>Click to refresh</clickable-text>"
    }
  }
}
