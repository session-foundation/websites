// This file is generated by the generate-abis script. Do not modify it manually.

/**
 * Generated ABI for the ServiceNodeContribution contract.
 */
export const ServiceNodeContributionAbi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_stakingRewardsContract',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_maxContributors',
        type: 'uint256',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'X',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'Y',
            type: 'uint256',
          },
        ],
        internalType: 'struct BN256G1.G1Point',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'sigs0',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs2',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs3',
            type: 'uint256',
          },
        ],
        internalType: 'struct IServiceNodeRewards.BLSSignatureParams',
        name: 'sig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'serviceNodePubkey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'serviceNodeSignature1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'serviceNodeSignature2',
            type: 'uint256',
          },
          {
            internalType: 'uint16',
            name: 'fee',
            type: 'uint16',
          },
        ],
        internalType: 'struct IServiceNodeRewards.ServiceNodeParams',
        name: 'params',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IServiceNodeRewards.ReservedContributor[]',
        name: 'reserved',
        type: 'tuple[]',
      },
      {
        internalType: 'bool',
        name: '_manualFinalize',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'ed25519Pubkey',
        type: 'uint256',
      },
    ],
    name: 'BeneficiaryUpdatingDisabledNodeIsNotOpen',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'numContributors',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxNumContributors',
        type: 'uint256',
      },
    ],
    name: 'CalcMinContributionGivenBadContribArgs',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IServiceNodeContribution.Status',
        name: 'status',
        type: 'uint8',
      },
    ],
    name: 'ContributeFundsNotPossible',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'contributed',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'min',
        type: 'uint256',
      },
    ],
    name: 'ContributionBelowMinAmount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'contributed',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'reserved',
        type: 'uint256',
      },
    ],
    name: 'ContributionBelowReservedAmount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'totalContributed',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'totalReserved',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'stakingRequirement',
        type: 'uint256',
      },
    ],
    name: 'ContributionExceedsStakingRequirement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'DuplicateAddressInReservedContributor',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'fee',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: 'max',
        type: 'uint16',
      },
    ],
    name: 'FeeExceedsPossibleValue',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IServiceNodeContribution.Status',
        name: 'status',
        type: 'uint8',
      },
    ],
    name: 'FeeUpdateNotPossible',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IServiceNodeContribution.Status',
        name: 'status',
        type: 'uint8',
      },
    ],
    name: 'FinalizeNotPossible',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'contributor',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'FirstContributionMustBeOperator',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'FirstReservedContributorMustBeOperator',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'maxContributors',
        type: 'uint256',
      },
    ],
    name: 'MaxContributorsExceeded',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'nonContributorAddr',
        type: 'address',
      },
    ],
    name: 'NonContributorUpdatedBeneficiary',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OnlyOperatorIsAuthorised',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IServiceNodeContribution.Status',
        name: 'status',
        type: 'uint8',
      },
    ],
    name: 'PubkeyUpdateNotPossible',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'RescueBalanceIsEmpty',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IServiceNodeContribution.Status',
        name: 'status',
        type: 'uint8',
      },
    ],
    name: 'RescueNotPossible',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'contributed',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'min',
        type: 'uint256',
      },
    ],
    name: 'ReservedContributionBelowMinAmount',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'contributed',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'remaining',
        type: 'uint256',
      },
    ],
    name: 'ReservedContributionExceedsStakingRequirement',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'ReservedContributorHasZeroAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'enum IServiceNodeContribution.Status',
        name: 'status',
        type: 'uint8',
      },
    ],
    name: 'ReservedContributorUpdateNotPossible',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'oldMax',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'newMax',
        type: 'uint256',
      },
    ],
    name: 'RewardsContractMaxContributorsChanged',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'oldRequirement',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'newRequirement',
        type: 'uint256',
      },
    ],
    name: 'RewardsContractStakingRequirementChanged',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'max',
        type: 'uint256',
      },
    ],
    name: 'TooManyReservedContributors',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'contribTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'blockTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'delayRequired',
        type: 'uint256',
      },
    ],
    name: 'WithdrawTooEarly',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serviceNodePubkey',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'Filled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serviceNodePubkey',
        type: 'uint256',
      },
    ],
    name: 'Finalized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'contributor',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'NewContribution',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serviceNodePubkey',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint16',
        name: 'fee',
        type: 'uint16',
      },
    ],
    name: 'OpenForPublicContribution',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'staker',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'oldBeneficiary',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newBeneficiary',
        type: 'address',
      },
    ],
    name: 'UpdateStakerBeneficiary',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'contributor',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'WithdrawContribution',
    type: 'event',
  },
  {
    inputs: [],
    name: 'MAX_FEE',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SENT',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'WITHDRAWAL_DELAY',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_blsSignature',
    outputs: [
      {
        internalType: 'uint256',
        name: 'sigs0',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'sigs1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'sigs2',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'sigs3',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: '_contributorAddresses',
    outputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: '_serviceNodeParams',
    outputs: [
      {
        internalType: 'uint256',
        name: 'serviceNodePubkey',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'serviceNodeSignature1',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'serviceNodeSignature2',
        type: 'uint256',
      },
      {
        internalType: 'uint16',
        name: 'fee',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blsPubkey',
    outputs: [
      {
        internalType: 'uint256',
        name: 'X',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'Y',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blsSignature',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'sigs0',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs2',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs3',
            type: 'uint256',
          },
        ],
        internalType: 'struct IServiceNodeRewards.BLSSignatureParams',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'contributionRemaining',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'numContributors',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'maxNumContributors',
        type: 'uint256',
      },
    ],
    name: 'calcMinimumContribution',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
    ],
    name: 'contributeFunds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'stakerAddr',
        type: 'address',
      },
    ],
    name: 'contributionTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'stakerAddr',
        type: 'address',
      },
    ],
    name: 'contributions',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
    ],
    name: 'contributorAddresses',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'beneficiary',
            type: 'address',
          },
        ],
        internalType: 'struct IServiceNodeRewards.Staker',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contributorAddressesLength',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'finalize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getContributions',
    outputs: [
      {
        internalType: 'address[]',
        name: 'addrs',
        type: 'address[]',
      },
      {
        internalType: 'address[]',
        name: 'beneficiaries',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'contribs',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getReserved',
    outputs: [
      {
        internalType: 'address[]',
        name: 'addrs',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'contribs',
        type: 'uint256[]',
      },
      {
        internalType: 'bool[]',
        name: 'received',
        type: 'bool[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'manualFinalize',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'maxContributors',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minimumContribution',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_stakingRequirement',
        type: 'uint256',
      },
    ],
    name: 'minimumOperatorContribution',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operator',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'operatorContribution',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'tokenAddress',
        type: 'address',
      },
    ],
    name: 'rescueERC20',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'stakerAddr',
        type: 'address',
      },
    ],
    name: 'reservedContributions',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'received',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'reservedContributionsAddresses',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'reset',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'X',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'Y',
            type: 'uint256',
          },
        ],
        internalType: 'struct BN256G1.G1Point',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'sigs0',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs2',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs3',
            type: 'uint256',
          },
        ],
        internalType: 'struct IServiceNodeRewards.BLSSignatureParams',
        name: 'sig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'serviceNodePubkey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'serviceNodeSignature1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'serviceNodeSignature2',
            type: 'uint256',
          },
          {
            internalType: 'uint16',
            name: 'fee',
            type: 'uint16',
          },
        ],
        internalType: 'struct IServiceNodeRewards.ServiceNodeParams',
        name: 'params',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IServiceNodeRewards.ReservedContributor[]',
        name: 'reserved',
        type: 'tuple[]',
      },
      {
        internalType: 'bool',
        name: '_manualFinalize',
        type: 'bool',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'resetUpdateAndContribute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'fee',
        type: 'uint16',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IServiceNodeRewards.ReservedContributor[]',
        name: 'reserved',
        type: 'tuple[]',
      },
      {
        internalType: 'bool',
        name: '_manualFinalize',
        type: 'bool',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'resetUpdateFeeReservedAndContribute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'serviceNodeParams',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'serviceNodePubkey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'serviceNodeSignature1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'serviceNodeSignature2',
            type: 'uint256',
          },
          {
            internalType: 'uint16',
            name: 'fee',
            type: 'uint16',
          },
        ],
        internalType: 'struct IServiceNodeRewards.ServiceNodeParams',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingRequirement',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'stakingRewardsContract',
    outputs: [
      {
        internalType: 'contract IServiceNodeRewards',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'status',
    outputs: [
      {
        internalType: 'enum IServiceNodeContribution.Status',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalContribution',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalReservedContribution',
    outputs: [
      {
        internalType: 'uint256',
        name: 'result',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newBeneficiary',
        type: 'address',
      },
    ],
    name: 'updateBeneficiary',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'fee',
        type: 'uint16',
      },
    ],
    name: 'updateFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'value',
        type: 'bool',
      },
    ],
    name: 'updateManualFinalize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'X',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'Y',
            type: 'uint256',
          },
        ],
        internalType: 'struct BN256G1.G1Point',
        name: 'newBLSPubkey',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'sigs0',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs2',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs3',
            type: 'uint256',
          },
        ],
        internalType: 'struct IServiceNodeRewards.BLSSignatureParams',
        name: 'newBLSSig',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: 'ed25519Pubkey',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'ed25519Sig0',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'ed25519Sig1',
        type: 'uint256',
      },
    ],
    name: 'updatePubkeys',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'addr',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IServiceNodeRewards.ReservedContributor[]',
        name: 'reserved',
        type: 'tuple[]',
      },
    ],
    name: 'updateReservedContributors',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawContribution',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;
