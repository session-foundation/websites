// This file is generated by the generate-abis script. Do not modify it manually.

/**
 * Generated ABI for the TokenVestingStaking contract.
 */
export const TokenVestingStakingAbi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'beneficiary_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'revoker_',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'start_',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'end_',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'transferableBeneficiary_',
        type: 'bool',
      },
      {
        internalType: 'contract IServiceNodeRewards',
        name: 'rewardsContract_',
        type: 'address',
      },
      {
        internalType: 'contract IServiceNodeContributionFactory',
        name: 'snContribFactory_',
        type: 'address',
      },
      {
        internalType: 'contract IERC20',
        name: 'sesh_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'oldBeneficiary',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newBeneficiary',
        type: 'address',
      },
    ],
    name: 'BeneficiaryTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'oldRevoker',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'newRevoker',
        type: 'address',
      },
    ],
    name: 'RevokerTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'TokenVestingRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'TokensReleased',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'TokensRevokedReleased',
    type: 'event',
  },
  {
    inputs: [],
    name: 'SESH',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'X',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'Y',
            type: 'uint256',
          },
        ],
        internalType: 'struct BN256G1.G1Point',
        name: 'blsPubkey',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'sigs0',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs2',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'sigs3',
            type: 'uint256',
          },
        ],
        internalType: 'struct IServiceNodeRewards.BLSSignatureParams',
        name: 'blsSignature',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'serviceNodePubkey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'serviceNodeSignature1',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'serviceNodeSignature2',
            type: 'uint256',
          },
          {
            internalType: 'uint16',
            name: 'fee',
            type: 'uint16',
          },
        ],
        internalType: 'struct IServiceNodeRewards.ServiceNodeParams',
        name: 'serviceNodeParams',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: 'snBeneficiary',
        type: 'address',
      },
    ],
    name: 'addBLSPublicKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'beneficiary',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'claimRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimRewards',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'snContribAddr',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'snContribBeneficiary',
        type: 'address',
      },
    ],
    name: 'contributeFunds',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'end',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'serviceNodeID',
        type: 'uint64',
      },
    ],
    name: 'initiateExitBLSPublicKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'release',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'revoke',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'revoked',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'revoker',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'rewardsContract',
    outputs: [
      {
        internalType: 'contract IServiceNodeRewards',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'snContribFactory',
    outputs: [
      {
        internalType: 'contract IServiceNodeContributionFactory',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'start',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'beneficiary_',
        type: 'address',
      },
    ],
    name: 'transferBeneficiary',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'revoker_',
        type: 'address',
      },
    ],
    name: 'transferRevoker',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'transferableBeneficiary',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'snContribAddr',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'snContribBeneficiary',
        type: 'address',
      },
    ],
    name: 'updateBeneficiary',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'snContribAddr',
        type: 'address',
      },
    ],
    name: 'withdrawContribution',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
] as const;
